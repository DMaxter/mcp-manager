stages:
  - build
  - lint
  - publish
  - release

cache:
  paths:
    - target/release

variables:
  RUST_IMAGE: rustlang/rust:nightly
  PACKAGE_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/mcp-manager/${CI_COMMIT_TAG}/mcp-manager"

build:
  stage: build
  image: $RUST_IMAGE
  script:
    - cargo build --all-targets --release --verbose
  artifacts:
    paths:
      - target/release/mcp-manager
  rules:
    - !reference [.run_on_tag]

lint:
  stage: lint
  image: $RUST_IMAGE
  script:
    - rustup component add clippy
    - cargo clippy --all-targets --all-features
  rules:
    - !reference [.run_on_tag]

publish:
  stage: publish
  image: curlimages/curl:latest
  script: |
    curl --header "JOB-TOKEN: $CI_JOB_TOKEN" \
    --upload-file target/release/mcp-manager \
    "${PACKAGE_URL}"
  rules:
    - !reference [.run_on_tag]

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script: echo "Creating release ${CI_COMMIT_TAG}"
  release:
    name: "Release ${CI_COMMIT_TAG}"
    tag_name: $CI_COMMIT_TAG
    description: $CI_COMMIT_TAG_MESSAGE
    assets:
      links:
        - name: mcp-manager
          url: $PACKAGE_URL
          link_type: package
  rules:
    - !reference [.run_on_tag]

.run_on_tag:
  if: $CI_COMMIT_TAG
